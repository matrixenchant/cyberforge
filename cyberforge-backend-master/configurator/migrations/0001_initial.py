# Generated by Django 3.2.18 on 2023-04-05 10:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accessory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cooling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CPU Cooler', 'CPU Cooler'), ('Case Fan', 'Case Fan'), ('Liquid Cooler', 'Liquid Cooler')], max_length=20)),
                ('socket', models.CharField(max_length=50)),
                ('maximum_tdp', models.PositiveIntegerField()),
                ('fan_diameter', models.PositiveIntegerField()),
                ('maximum_rotation_speed', models.PositiveIntegerField()),
                ('adjustable_speed', models.BooleanField(default=False)),
                ('maximum_noise_level', models.PositiveIntegerField()),
                ('cooler_height', models.PositiveIntegerField()),
                ('connector', models.CharField(max_length=8)),
                ('air_flow', models.DecimalField(decimal_places=1, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='CustomPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='GraphicsCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chipset_model', models.CharField(choices=[('GTX1050Ti', 'GTX1050Ti'), ('GTX1060', 'GTX1060'), ('GTX1070', 'GTX1070'), ('GTX1080', 'GTX1080'), ('RTX2060', 'RTX2060'), ('RTX2070', 'RTX2070'), ('RTX2080', 'RTX2080'), ('RTX3060', 'RTX3060'), ('RTX3070', 'RTX3070'), ('RTX3080', 'RTX3080')], max_length=10)),
                ('gpu_frequency', models.DecimalField(decimal_places=0, max_digits=6)),
                ('video_memory_frequency', models.DecimalField(decimal_places=0, max_digits=5)),
                ('video_memory_type', models.CharField(max_length=6)),
                ('video_memory_capacity', models.PositiveIntegerField()),
                ('video_memory_bus_bit_rate', models.PositiveIntegerField()),
                ('number_of_universal_processors', models.PositiveIntegerField()),
                ('connectors', models.CharField(max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Headset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_form_factor', models.CharField(choices=[('Mini Tower', 'Mini Tower'), ('Midi Tower', 'Midi Tower'), ('Full Tower', 'Full Tower')], max_length=10)),
                ('compatible_board_form_factor', models.CharField(max_length=10)),
                ('power_supply_unit_location', models.CharField(max_length=10)),
                ('number_of_5_25_bays', models.PositiveIntegerField()),
                ('number_of_3_5_internal_bays', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Wired', 'Wired'), ('Wireless', 'Wireless')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interface', models.CharField(max_length=20)),
                ('interface_transfer_rate', models.FloatField()),
                ('disk_capacity', models.IntegerField()),
                ('memory_type', models.CharField(max_length=20)),
                ('read_speed', models.FloatField()),
                ('write_speed', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Microphone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('wired', 'Wired'), ('wireless', 'Wireless')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resolution', models.CharField(max_length=50)),
                ('refresh_rate', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Motherboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('socket', models.CharField(max_length=50)),
                ('form_factor', models.CharField(max_length=50)),
                ('num_memory_slots', models.IntegerField()),
                ('num_pci_express_slots_x1', models.IntegerField()),
                ('num_pci_express_slots_x16', models.IntegerField()),
                ('power_connectors', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Wired', 'Wired'), ('Wireless', 'Wireless')], max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PowerSupplyUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('power', models.PositiveIntegerField()),
                ('standard', models.CharField(choices=[('80 PLUS', '80 PLUS'), ('80 PLUS Bronze', '80 PLUS Bronze'), ('80 PLUS Silver', '80 PLUS Silver'), ('80 PLUS Gold', '80 PLUS Gold'), ('80 PLUS Platinum', '80 PLUS Platinum')], max_length=16)),
                ('power_connectors', models.CharField(max_length=20)),
                ('pci_e_connectors', models.PositiveIntegerField()),
                ('molex_connectors', models.PositiveIntegerField()),
                ('sata_connectors', models.PositiveIntegerField()),
                ('adjustable_fan_speed', models.BooleanField(default=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Processor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processor_type', models.CharField(choices=[('Celeron', 'Celeron'), ('Core i3', 'Core i3'), ('Core i5', 'Core i5'), ('Core i7', 'Core i7'), ('Core i9', 'Core i9'), ('Pentium', 'Pentium'), ('Xeon', 'Xeon')], max_length=10)),
                ('socket', models.CharField(choices=[('LGA1151', 'LGA1151'), ('LGA1200', 'LGA1200'), ('AM4', 'AM4'), ('TR4', 'TR4'), ('sTRX4', 'sTRX4')], max_length=10)),
                ('total_number_of_cores', models.PositiveIntegerField()),
                ('clock_frequency', models.FloatField()),
                ('microarchitecture', models.CharField(max_length=10)),
                ('l3_cache_size', models.PositiveIntegerField(help_text='in MB')),
                ('integrated_graphics_system', models.CharField(max_length=50)),
                ('process_technology', models.PositiveIntegerField(help_text='in nm')),
                ('rated_power', models.PositiveIntegerField(help_text='in W')),
            ],
        ),
        migrations.CreateModel(
            name='RAM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memory_type', models.CharField(choices=[('DDR', 'DDR'), ('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4')], max_length=4)),
                ('memory_capacity', models.PositiveIntegerField()),
                ('memory_clock_speed', models.PositiveIntegerField()),
                ('supply_voltage', models.DecimalField(decimal_places=1, max_digits=3)),
                ('timings', models.CharField(max_length=5)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SoundCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External')], max_length=8)),
                ('connection_interface', models.CharField(default='PCI', max_length=10)),
                ('signal_to_noise_ratio', models.DecimalField(decimal_places=1, max_digits=5)),
                ('frequency_range', models.CharField(max_length=15)),
                ('analog_inputs', models.TextField()),
                ('analog_outputs', models.TextField()),
                ('multichannel_support', models.CharField(max_length=3)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('custom_pcs', models.ManyToManyField(to='configurator.CustomPC')),
            ],
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessories', models.ManyToManyField(to='configurator.Accessory')),
                ('cooling', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.cooling')),
                ('graphics_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.graphicscard')),
                ('housing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.housing')),
                ('memory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.memory')),
                ('motherboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.motherboard')),
                ('power_supply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.powersupplyunit')),
                ('processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.processor')),
                ('ram', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.ram')),
                ('sound_card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.soundcard')),
            ],
        ),
        migrations.AddField(
            model_name='custompc',
            name='modification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configurator.modification'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='headset',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='configurator.headset'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='keybord',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='configurator.keyboard'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='microphone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='configurator.microphone'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='monitor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='configurator.monitor'),
        ),
        migrations.AddField(
            model_name='accessory',
            name='mouse',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='configurator.mouse'),
        ),
    ]
